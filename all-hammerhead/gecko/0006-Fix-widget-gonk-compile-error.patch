diff --git a/widget/gonk/GeckoTouchDispatcher.cpp b/widget/gonk/GeckoTouchDispatcher.cpp
index 46b0382..01ceba9 100644
--- a/widget/gonk/GeckoTouchDispatcher.cpp
+++ b/widget/gonk/GeckoTouchDispatcher.cpp
@@ -19,7 +19,9 @@
 #include "GeckoProfiler.h"
 #include "GeckoTouchDispatcher.h"
 #include "InputData.h"
+#ifdef MOZ_ENABLE_PROFILER_SPS
 #include "ProfilerMarkers.h"
+#endif
 #include "base/basictypes.h"
 #include "gfxPrefs.h"
 #include "libui/Input.h"
@@ -364,6 +366,7 @@ GeckoTouchDispatcher::DispatchTouchEvent(MultiTouchInput& aMultiTouch)
   WidgetTouchEvent event = aMultiTouch.ToWidgetTouchEvent(nullptr);
   nsEventStatus status = nsWindow::DispatchInputEvent(event, &captured);
 
+#ifdef MOZ_ENABLE_PROFILER_SPS
   if (mEnabledUniformityInfo && profiler_is_active()) {
     const char* touchAction = "Invalid";
     switch (aMultiTouch.mType) {
@@ -383,6 +386,7 @@ GeckoTouchDispatcher::DispatchTouchEvent(MultiTouchInput& aMultiTouch)
     TouchDataPayload* payload = new TouchDataPayload(touchPoint);
     PROFILER_MARKER_PAYLOAD(touchAction, payload);
   }
+#endif
 
   if (!captured && (aMultiTouch.mTouches.Length() == 1)) {
     bool forwardToChildren = status != nsEventStatus_eConsumeNoDefault;
diff --git a/widget/gonk/GeckoTouchDispatcher.h b/widget/gonk/GeckoTouchDispatcher.h
index d2766b9..4bb447c0 100644
--- a/widget/gonk/GeckoTouchDispatcher.h
+++ b/widget/gonk/GeckoTouchDispatcher.h
@@ -49,6 +49,9 @@ public:
   void DispatchTouchMoveEvents(TimeStamp aVsyncTime);
   static bool NotifyVsync(TimeStamp aVsyncTimestamp);
 
+protected:
+  ~GeckoTouchDispatcher() {}
+
 private:
   void ResampleTouchMoves(MultiTouchInput& aOutTouch, TimeStamp vsyncTime);
   void SendTouchEvent(MultiTouchInput& aData);
diff --git a/widget/gonk/GonkMemoryPressureMonitoring.cpp b/widget/gonk/GonkMemoryPressureMonitoring.cpp
index 949f36c..a3f57d03 100644
--- a/widget/gonk/GonkMemoryPressureMonitoring.cpp
+++ b/widget/gonk/GonkMemoryPressureMonitoring.cpp
@@ -267,6 +267,7 @@ private:
 
   ScopedClose mShutdownPipeRead;
   ScopedClose mShutdownPipeWrite;
+  ~MemoryPressureWatcher() {}
 };
 
 NS_IMPL_ISUPPORTS(MemoryPressureWatcher, nsIRunnable, nsIObserver);
diff --git a/widget/gonk/nativewindow/moz.build b/widget/gonk/nativewindow/moz.build
index 598e489..4e5ff2d 100644
--- a/widget/gonk/nativewindow/moz.build
+++ b/widget/gonk/nativewindow/moz.build
@@ -20,7 +20,7 @@ EXPORTS += [
     'GonkNativeWindowClient.h',
 ]
 
-if CONFIG['ANDROID_VERSION'] == '19':
+if CONFIG['ANDROID_VERSION'] in ('19', '21'):
     EXPORTS += [
         'GonkBufferQueueKK.h',
         'GonkConsumerBaseKK.h',
@@ -42,7 +42,7 @@ elif CONFIG['ANDROID_VERSION'] == '15':
     ]
 
 if CONFIG['MOZ_B2G_CAMERA'] or CONFIG['MOZ_OMX_DECODER'] or CONFIG['MOZ_WEBRTC']:
-    if CONFIG['ANDROID_VERSION'] == '19':
+    if CONFIG['ANDROID_VERSION'] in ('19', '21'):
         SOURCES += [
             'GonkBufferQueueKK.cpp',
             'GonkConsumerBaseKK.cpp',
diff --git a/widget/gonk/nsClipboard.h b/widget/gonk/nsClipboard.h
index 4b1b2ab..7aa6a48 100644
--- a/widget/gonk/nsClipboard.h
+++ b/widget/gonk/nsClipboard.h
@@ -16,6 +16,9 @@ public:
   NS_DECL_NSICLIPBOARD
 
   nsClipboard();
+
+private:
+  ~nsClipboard() {}
 };
 
 #endif
diff --git a/widget/gonk/nsScreenManagerGonk.h b/widget/gonk/nsScreenManagerGonk.h
index fc2ab4f..c4851ef 100644
--- a/widget/gonk/nsScreenManagerGonk.h
+++ b/widget/gonk/nsScreenManagerGonk.h
@@ -29,7 +29,6 @@ class nsScreenGonk : public nsBaseScreen
 
 public:
     nsScreenGonk(void* nativeScreen);
-    ~nsScreenGonk();
 
     NS_IMETHOD GetId(uint32_t* aId);
     NS_IMETHOD GetRect(int32_t* aLeft, int32_t* aTop, int32_t* aWidth, int32_t* aHeight);
@@ -41,19 +40,24 @@ public:
 
     static uint32_t GetRotation();
     static ScreenConfiguration GetConfiguration();
+
+private:
+    ~nsScreenGonk();
 };
 
 class nsScreenManagerGonk MOZ_FINAL : public nsIScreenManager
 {
 public:
     nsScreenManagerGonk();
-    ~nsScreenManagerGonk();
 
     NS_DECL_ISUPPORTS
     NS_DECL_NSISCREENMANAGER
 
 protected:
     nsCOMPtr<nsIScreen> mOneScreen;
+
+private:
+    ~nsScreenManagerGonk();
 };
 
 #endif /* nsScreenManagerGonk_h___ */
