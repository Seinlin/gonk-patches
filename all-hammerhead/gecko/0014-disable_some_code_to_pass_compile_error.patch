diff --git a/ipc/keystore/KeyStore.cpp b/ipc/keystore/KeyStore.cpp
index 6cf1068..10bc1fc 100644
--- a/ipc/keystore/KeyStore.cpp
+++ b/ipc/keystore/KeyStore.cpp
@@ -78,7 +78,8 @@ public:
 #endif
 };
 
-IMPLEMENT_META_INTERFACE(KeystoreService, "android.security.keystore");
+//todo
+//IMPLEMENT_META_INTERFACE(KeystoreService, "android.security.keystore");
 
 // Here comes binder requests.
 status_t BnKeystoreService::onTransact(uint32_t code, const Parcel& data, Parcel* reply, uint32_t flags)
@@ -169,9 +170,12 @@ public:
 
 void startKeyStoreService()
 {
+//todo
+/*
   android::sp<android::IServiceManager> sm = android::defaultServiceManager();
   android::sp<android::KeyStoreService> keyStoreService = new android::KeyStoreService();
   sm->addService(String16("android.security.keystore"), keyStoreService);
+*/
 }
 #else
 void startKeyStoreService() { return; }
diff --git a/widget/gonk/libdisplay/FramebufferSurface.cpp b/widget/gonk/libdisplay/FramebufferSurface.cpp
index 6f2b8ad..7e3a2a8 100644
--- a/widget/gonk/libdisplay/FramebufferSurface.cpp
+++ b/widget/gonk/libdisplay/FramebufferSurface.cpp
@@ -50,7 +50,7 @@ namespace android {
  * was adapted from the version in SurfaceFlinger
  */
 FramebufferSurface::FramebufferSurface(int disp, uint32_t width, uint32_t height, uint32_t format,
-        sp<BufferQueue>& bq) :
+        sp<IGraphicBufferConsumer>& bq) :
 #if ANDROID_VERSION >= 19
     ConsumerBase(bq, true),
 #else
@@ -87,7 +87,7 @@ status_t FramebufferSurface::nextBuffer(sp<GraphicBuffer>& outBuffer, sp<Fence>&
 #else
     status_t err = acquireBufferLocked(&item);
 #endif
-    if (err == BufferQueue::NO_BUFFER_AVAILABLE) {
+    if (err == IGraphicBufferConsumer::STALE_BUFFER_SLOT) {
         outBuffer = mCurrentBuffer;
         return NO_ERROR;
     } else if (err != NO_ERROR) {
@@ -113,7 +113,7 @@ status_t FramebufferSurface::nextBuffer(sp<GraphicBuffer>& outBuffer, sp<Fence>&
         err = releaseBufferLocked(mCurrentBufferSlot, EGL_NO_DISPLAY,
                 EGL_NO_SYNC_KHR);
 #endif
-        if (err != NO_ERROR && err != BufferQueue::STALE_BUFFER_SLOT) {
+        if (err != NO_ERROR && err != IGraphicBufferConsumer::STALE_BUFFER_SLOT) {
             ALOGE("error releasing buffer: %s (%d)", strerror(-err), err);
             return err;
         }
diff --git a/widget/gonk/libdisplay/FramebufferSurface.h b/widget/gonk/libdisplay/FramebufferSurface.h
index 640ea3f..54add9a 100644
--- a/widget/gonk/libdisplay/FramebufferSurface.h
+++ b/widget/gonk/libdisplay/FramebufferSurface.h
@@ -34,7 +34,7 @@ class HWComposer;
 
 class FramebufferSurface : public ConsumerBase {
 public:
-    FramebufferSurface(int disp, uint32_t width, uint32_t height, uint32_t format, sp<BufferQueue>& bq);
+    FramebufferSurface(int disp, uint32_t width, uint32_t height, uint32_t format, sp<IGraphicBufferConsumer>& bq);
 
     bool isUpdateOnDemand() const { return false; }
     status_t setUpdateRectangle(const Rect& updateRect);
diff --git a/widget/gonk/libdisplay/GonkDisplayJB.cpp b/widget/gonk/libdisplay/GonkDisplayJB.cpp
index 7b540f9..f521573 100644
--- a/widget/gonk/libdisplay/GonkDisplayJB.cpp
+++ b/widget/gonk/libdisplay/GonkDisplayJB.cpp
@@ -105,19 +105,23 @@ GonkDisplayJB::GonkDisplayJB()
 
     mAlloc = new GraphicBufferAlloc();
 
-    status_t error;
+    status_t error = 0;
 
 #if ANDROID_VERSION >= 19
-    sp<BufferQueue> bq = new BufferQueue(mAlloc);
+    //todo
+    //sp<BufferQueue> bq = new BufferQueue(mAlloc);
 #else
     sp<BufferQueue> bq = new BufferQueue(true, mAlloc);
 #endif
-    mFBSurface = new FramebufferSurface(0, mWidth, mHeight, surfaceformat, bq);
+    //todo
+    //mFBSurface = new FramebufferSurface(0, mWidth, mHeight, surfaceformat, bq);
 
 #if ANDROID_VERSION == 17
     sp<SurfaceTextureClient> stc = new SurfaceTextureClient(static_cast<sp<ISurfaceTexture> >(mFBSurface->getBufferQueue()));
 #else
-    sp<Surface> stc = new Surface(static_cast<sp<IGraphicBufferProducer> >(bq));
+    //todo
+    //sp<Surface> stc = new Surface(static_cast<sp<IGraphicBufferProducer> >(bq));
+    sp<Surface> stc = new Surface(0);
 #endif
     mSTClient = stc;
     mSTClient->perform(mSTClient.get(), NATIVE_WINDOW_SET_BUFFER_COUNT, 2);
diff --git a/widget/gonk/nativewindow/FakeSurfaceComposer.cpp b/widget/gonk/nativewindow/FakeSurfaceComposer.cpp
index 82297ae..946f02e 100644
--- a/widget/gonk/nativewindow/FakeSurfaceComposer.cpp
+++ b/widget/gonk/nativewindow/FakeSurfaceComposer.cpp
@@ -29,8 +29,11 @@ namespace android {
 
 /* static */
 void FakeSurfaceComposer::instantiate() {
+//todo
+/*
     defaultServiceManager()->addService(
             String16("SurfaceFlinger"), new FakeSurfaceComposer());
+*/        
 }
 
 FakeSurfaceComposer::FakeSurfaceComposer()
