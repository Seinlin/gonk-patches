From 8902652a0947c404cd3af6c6ecea8a649e927e06 Mon Sep 17 00:00:00 2001
From: Kai-Zhen Li <kli@mozilla.com>
Date: Sun, 16 Nov 2014 23:23:11 +0800
Subject: [PATCH 14/14] Update widget/ for gonk-L.

---
 widget/gonk/libdisplay/FramebufferSurface.cpp | 21 ++++++++++++++++++++-
 widget/gonk/libdisplay/FramebufferSurface.h   |  4 ++++
 widget/gonk/libdisplay/GonkDisplayJB.cpp      | 10 +++++++++-
 3 files changed, 33 insertions(+), 2 deletions(-)

diff --git a/widget/gonk/libdisplay/FramebufferSurface.cpp b/widget/gonk/libdisplay/FramebufferSurface.cpp
index 6f2b8ad..d9ed0d6 100644
--- a/widget/gonk/libdisplay/FramebufferSurface.cpp
+++ b/widget/gonk/libdisplay/FramebufferSurface.cpp
@@ -49,6 +49,24 @@ namespace android {
  * This implements the (main) framebuffer management. This class
  * was adapted from the version in SurfaceFlinger
  */
+#if ANDROID_VERSION >= 21
+FramebufferSurface::FramebufferSurface(int disp, uint32_t width, uint32_t height, uint32_t format, const sp<IGraphicBufferConsumer>& consumer) :
+    ConsumerBase(consumer, true),
+    mDisplayType(disp),
+    mCurrentBufferSlot(-1),
+    mCurrentBuffer(0),
+    lastHandle(0)
+{
+    mName = "FramebufferSurface";
+    mConsumer->setConsumerName(mName);
+    mConsumer->setConsumerUsageBits(GRALLOC_USAGE_HW_FB |
+                                   GRALLOC_USAGE_HW_RENDER |
+                                   GRALLOC_USAGE_HW_COMPOSER);
+    mConsumer->setDefaultBufferFormat(format);
+    mConsumer->setDefaultBufferSize(width, height);
+    mConsumer->setDefaultMaxBufferCount(NUM_FRAMEBUFFER_SURFACE_BUFFERS);
+}
+#else // ANDROID_VERSION >= 21
 FramebufferSurface::FramebufferSurface(int disp, uint32_t width, uint32_t height, uint32_t format,
         sp<BufferQueue>& bq) :
 #if ANDROID_VERSION >= 19
@@ -77,6 +95,7 @@ FramebufferSurface::FramebufferSurface(int disp, uint32_t width, uint32_t height
     consumer->setDefaultBufferSize(width, height);
     consumer->setDefaultMaxBufferCount(NUM_FRAMEBUFFER_SURFACE_BUFFERS);
 }
+#endif // #if ANDROID_VERSION >= 21
 
 status_t FramebufferSurface::nextBuffer(sp<GraphicBuffer>& outBuffer, sp<Fence>& outFence) {
     Mutex::Autolock lock(mMutex);
@@ -113,7 +132,7 @@ status_t FramebufferSurface::nextBuffer(sp<GraphicBuffer>& outBuffer, sp<Fence>&
         err = releaseBufferLocked(mCurrentBufferSlot, EGL_NO_DISPLAY,
                 EGL_NO_SYNC_KHR);
 #endif
-        if (err != NO_ERROR && err != BufferQueue::STALE_BUFFER_SLOT) {
+        if (err != NO_ERROR && err != IGraphicBufferConsumer::STALE_BUFFER_SLOT) {
             ALOGE("error releasing buffer: %s (%d)", strerror(-err), err);
             return err;
         }
diff --git a/widget/gonk/libdisplay/FramebufferSurface.h b/widget/gonk/libdisplay/FramebufferSurface.h
index 640ea3f..0cf4cce 100644
--- a/widget/gonk/libdisplay/FramebufferSurface.h
+++ b/widget/gonk/libdisplay/FramebufferSurface.h
@@ -34,7 +34,11 @@ class HWComposer;
 
 class FramebufferSurface : public ConsumerBase {
 public:
+#if ANDROID_VERSION >= 21
+    FramebufferSurface(int disp, uint32_t width, uint32_t height, uint32_t format, const sp<IGraphicBufferConsumer>& consumer);
+#else
     FramebufferSurface(int disp, uint32_t width, uint32_t height, uint32_t format, sp<BufferQueue>& bq);
+#endif
 
     bool isUpdateOnDemand() const { return false; }
     status_t setUpdateRectangle(const Rect& updateRect);
diff --git a/widget/gonk/libdisplay/GonkDisplayJB.cpp b/widget/gonk/libdisplay/GonkDisplayJB.cpp
index 7b540f9..f2faa1a 100644
--- a/widget/gonk/libdisplay/GonkDisplayJB.cpp
+++ b/widget/gonk/libdisplay/GonkDisplayJB.cpp
@@ -106,7 +106,14 @@ GonkDisplayJB::GonkDisplayJB()
     mAlloc = new GraphicBufferAlloc();
 
     status_t error;
-
+#if ANDROID_VERSION >= 21
+    sp<IGraphicBufferProducer> producer;
+    sp<IGraphicBufferConsumer> consumer;
+    BufferQueue::createBufferQueue(&producer, &consumer,
+                    mAlloc);
+    mFBSurface = new FramebufferSurface(0, mWidth, mHeight, surfaceformat, consumer);
+    sp<Surface> stc = new Surface(producer);
+#else // ANDROID_VERSION >= 21
 #if ANDROID_VERSION >= 19
     sp<BufferQueue> bq = new BufferQueue(mAlloc);
 #else
@@ -119,6 +126,7 @@ GonkDisplayJB::GonkDisplayJB()
 #else
     sp<Surface> stc = new Surface(static_cast<sp<IGraphicBufferProducer> >(bq));
 #endif
+#endif // ANDROID_VERSION >= 21
     mSTClient = stc;
     mSTClient->perform(mSTClient.get(), NATIVE_WINDOW_SET_BUFFER_COUNT, 2);
     mSTClient->perform(mSTClient.get(), NATIVE_WINDOW_SET_USAGE, GRALLOC_USAGE_HW_FB | GRALLOC_USAGE_HW_RENDER | GRALLOC_USAGE_HW_COMPOSER);
-- 
1.9.1

